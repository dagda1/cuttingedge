{
  "name": "@cutting/react-abortable-fetch",
  "description": "A simpler use-fetch or use-query or whatever.",
  "version": "0.36.3",
  "repository": {
    "type": "git",
    "url": "https://github.com/dagda1/cuttingedge/tree/main/packages/react-abortable-fetch"
  },
  "type": "module",
  "module": "dist/esm/index.js",
  "types": "dist/esm/index.d.ts",
  "sideEffects": false,
  "license": "MIT",
  "scripts": {
    "lint": "eslint ./src/**/*.{ts,tsx} --fix",
    "start": "pnpm vite --host --port 3300 -l info",
    "test": "echo disabled #NODE_OPTIONS=--experimental-vm-modules NODE_ENV=test vitest",
    "build": "NODE_ENV=production devtools rollup"
  },
  "dependencies": {
    "@cutting/util": "workspace:*",
    "@effection/channel": "2.0.5",
    "@effection/core": "2.2.2",
    "@effection/events": "2.0.5",
    "@effection/fetch": "2.0.6",
    "@effection/main": "2.1.2",
    "@effection/subscription": "2.0.5",
    "@effection/stream": "2.0.5",
    "@xstate/react": "^3.2.2",
    "abortcontroller-polyfill": "^1.7.5",
    "assert-ts": "^0.3.4",
    "cross-fetch": "^4.0.0",
    "effection": "^2.0.7",
    "fetch-jsonp": "^1.3.0",
    "xstate": "^4.38.2"
  },
  "devDependencies": {
    "@cutting/devtools": "workspace:*",
    "@cutting/eslint-config": "workspace:*",
    "@cutting/tsconfig": "workspace:*",
    "@cutting/useful-types": "workspace:*",
    "@testing-library/react-hooks": "8.0.1",
    "@types/react": "18.2.25",
    "@types/react-dom": "18.2.11",
    "@vanilla-extract/css": "^1.13.0",
    "classnames": "2.3.2",
    "eslint": "8.47.0",
    "msw": "1.3.2",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "typescript": "5.1.6"
  },
  "files": [
    "dist",
    "README.md"
  ],
  "peerDependencies": {
    "react": ">= 18.x.x",
    "react-dom": ">= 18.x.x"
  },
  "keywords": [
    "hotkeys",
    "focus",
    "react",
    "reactjs",
    "reactnative",
    "hooks",
    "hook",
    "use-cancellable-fetch"
  ],
  "volta": {
    "extends": "../../package.json"
  },
  "msw": {
    "workerDirectory": "demo/public"
  },
  "exports": {
    "import": "./dist/esm/index.js"
  },
  "typesVersions": {
    "*": {
      "*": [
        "dist/esm/index.d.ts"
      ]
    }
  }
}
