export function createBuffer(size = Infinity) {
    if (size === Infinity) {
        return new Array();
    }
    else {
        return createRingBuffer(size);
    }
}
export function createRingBuffer(size) {
    let head = 0;
    let buffer = [];
    return {
        push(value) {
            buffer[head] = value;
            head += 1;
            if (head >= size) {
                head = 0;
            }
        },
        *[Symbol.iterator]() {
            for (let current = 0; current < buffer.length; current++) {
                yield buffer[(current + head) % buffer.length];
            }
        }
    };
}
//# sourceMappingURL=buffer.js.map