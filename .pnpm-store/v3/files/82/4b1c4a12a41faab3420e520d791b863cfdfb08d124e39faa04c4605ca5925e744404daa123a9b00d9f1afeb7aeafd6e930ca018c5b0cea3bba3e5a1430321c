{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;AAAA,mCAA0D;AAE1D,qCAAyC;AAUzC,SAAgB,kBAAkB,CAAC,UAAkB,EAAE,OAAkB;IAExE,IAAI,kBAA0B,CAAC;IAE/B,IACA;QACC,kBAAkB,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;KAC1D;IACD,OAAO,CAAC,EACR;QACC,kBAAkB,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,GAAG,eAAe,EAAE,OAAO,CAAC,CAAC;KAC5E;IAED,MAAM,OAAO,GAAG,IAAA,cAAM,EAAC,kBAAkB,CAAC,CAAC;IAE3C,OAAO;QACN,IAAI,EAAE,UAAU;QAChB,OAAO;QACP,kBAAkB;KAClB,CAAA;AACF,CAAC;AApBD,gDAoBC;AAED,SAAgB,kBAAkB,CAAC,UAAkB,EAAE,OAAkB;IAExE,OAAO,kBAAkB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,OAAO,CAAA;AACvD,CAAC;AAHD,gDAGC;AAED,SAAgB,0BAA0B,CAAC,UAAkB,EAAE,OAAkB;IAEhF,OAAO,IAAA,gBAAO,EAAC,kBAAkB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,cAAc,CAAC,CAAA;AAChF,CAAC;AAHD,gEAGC;AAED,SAAgB,uBAAuB,CAAC,UAAkB,EAAE,OAAkB;IAE7E,MAAM,EAAE,OAAO,EAAE,GAAG,kBAAkB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IAC5D,OAAO,CAAC,IAAY,EAAE,GAAG,KAAe,EAAE,EAAE,CAAC,IAAA,gBAAO,EAAC,OAAO,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,CAAA;AAC9E,CAAC;AAJD,0DAIC;AAED,SAAgB,qBAAqB,CAAyB,UAAkB,EAAE,OAAkB;IAEnG,OAAO,OAAO,CAAC,0BAA0B,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAA;AAChE,CAAC;AAHD,sDAGC;AAED,SAAgB,cAAc,CAAyB,UAAkB,EAAE,OAAkB;IAE5F,MAAM,CAAC,GAAG,kBAAkB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IAClD,MAAM,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;IAEtB,MAAM,eAAe,GAAW,IAAA,gBAAO,EAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IAEjE,OAAO;QACN,GAAG,CAAC;QACJ,GAAG,EAAE,OAAO,CAAC,eAAe,CAAa;QACzC,eAAe;QACf,eAAe,CAAC,IAAY,EAAE,GAAG,KAAe;YAE/C,OAAO,IAAA,gBAAO,EAAC,OAAO,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,CAAA;QACxC,CAAC;KACD,CAAA;AACF,CAAC;AAhBD,wCAgBC;AAED,kBAAe,cAAc,CAAA","sourcesContent":["import { dirname, normalize, sep, resolve } from 'upath2';\nimport type { IPackageJson } from '@ts-type/package-dts';\nimport { sync as pkgDir } from 'pkg-dir';\n\n/**\n * @see RequireResolve\n */\nexport interface IOptions\n{\n\tpaths?: string[];\n}\n\nexport function resolvePackageCore(moduleName: string, options?: IOptions)\n{\n\tlet entryPointLocation: string;\n\n\ttry\n\t{\n\t\tentryPointLocation = require.resolve(moduleName, options);\n\t}\n\tcatch (e)\n\t{\n\t\tentryPointLocation = require.resolve(moduleName + '/package.json', options);\n\t}\n\n\tconst pkgRoot = pkgDir(entryPointLocation);\n\n\treturn {\n\t\tname: moduleName,\n\t\tpkgRoot,\n\t\tentryPointLocation,\n\t}\n}\n\nexport function resolvePackageRoot(moduleName: string, options?: IOptions)\n{\n\treturn resolvePackageCore(moduleName, options).pkgRoot\n}\n\nexport function resolvePackageJsonLocation(moduleName: string, options?: IOptions)\n{\n\treturn resolve(resolvePackageCore(moduleName, options).pkgRoot, 'package.json')\n}\n\nexport function createResolveLocationFn(moduleName: string, options?: IOptions)\n{\n\tconst { pkgRoot } = resolvePackageCore(moduleName, options);\n\treturn (path: string, ...paths: string[]) => resolve(pkgRoot, path, ...paths)\n}\n\nexport function readModulePackageJson<P extends IPackageJson>(moduleName: string, options?: IOptions): P\n{\n\treturn require(resolvePackageJsonLocation(moduleName, options))\n}\n\nexport function resolvePackage<P extends IPackageJson>(moduleName: string, options?: IOptions)\n{\n\tconst _ = resolvePackageCore(moduleName, options);\n\tconst { pkgRoot } = _;\n\n\tconst pkgJsonLocation: string = resolve(pkgRoot, 'package.json');\n\n\treturn {\n\t\t..._,\n\t\tpkg: require(pkgJsonLocation) as any as P,\n\t\tpkgJsonLocation,\n\t\tresolveLocation(path: string, ...paths: string[])\n\t\t{\n\t\t\treturn resolve(pkgRoot, path, ...paths)\n\t\t},\n\t}\n}\n\nexport default resolvePackage\n"]}