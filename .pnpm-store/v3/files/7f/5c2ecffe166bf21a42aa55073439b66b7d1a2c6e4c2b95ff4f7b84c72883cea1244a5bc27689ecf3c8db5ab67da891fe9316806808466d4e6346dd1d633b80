"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createController = void 0;
const predicates_1 = require("../predicates");
const delegate_controller_1 = require("./delegate-controller");
const suspend_controller_1 = require("./suspend-controller");
const promise_controller_1 = require("./promise-controller");
const iterator_controller_1 = require("./iterator-controller");
const future_controller_1 = require("./future-controller");
const resource_controller_1 = require("./resource-controller");
const future_1 = require("../future");
const symbol_1 = require("../symbol");
function createController(task, operation, options) {
    if (predicates_1.isObjectOperation(operation)) {
        return delegate_controller_1.createDelegateController(task, operation, () => createController(task, operation[symbol_1.Symbol.operation], options));
    }
    else if (typeof (operation) === 'function') {
        return delegate_controller_1.createDelegateController(task, operation, () => createController(task, operation(task), options));
    }
    else if (!operation) {
        return suspend_controller_1.createSuspendController();
    }
    else if (predicates_1.isResource(operation)) {
        return resource_controller_1.createResourceController(task, operation);
    }
    else if (predicates_1.isFuture(operation)) {
        return future_controller_1.createFutureController(task, operation);
    }
    else if (predicates_1.isPromise(operation)) {
        return promise_controller_1.createPromiseController(task, operation);
    }
    else if (predicates_1.isGenerator(operation)) {
        return iterator_controller_1.createIteratorController(task, operation, options);
    }
    else {
        return future_controller_1.createFutureController(task, future_1.Future.reject(new Error(`unkown type of operation: ${operation}`)));
    }
}
exports.createController = createController;
//# sourceMappingURL=controller.js.map