{"version":3,"file":"core.js","sourceRoot":"","sources":["core.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2017/12/9/009.\n */\n\nimport _path, { ParsedPath, PlatformPath } from 'path';\n\nimport { IPathNode, IPath, IParse, IPathType, ORIGIN_KEY, IPathPlatform } from './lib/type';\n\nimport { getStatic, _replace_sep, _strip_sep, defaults } from './lib/util';\nimport * as types from './lib/type';\nimport { pathIsNetworkDrive, matchNetworkDriveRoot, matchNetworkDrive02 } from 'path-is-network-drive';\nimport { _fix_special } from './lib/fix';\n\nexport type { IPathNode, IPath, IParse, IPathType }\n\nexport class PathWrap implements IPath\n{\n\tpublic sep = '/';\n\t//protected _origin: IPath;\n\tpublic name: string | IPathPlatform;\n\tpublic delimiter: string;\n\t//protected __proto__: IPath;\n\n\tpublic win32: IPath;\n\tpublic posix: IPath;\n\n\tpublic node: PlatformPath = _path;\n\n\t// @ts-ignore\n\tpublic upath: PathWrap;\n\t// @ts-ignore\n\tpublic default: PathWrap;\n\n\tpublic fn: IPath;\n\n\t[ORIGIN_KEY]?: IPathType\n\n\tconstructor(path, id: string)\n\t{\n\t\tlet _static = getStatic(this);\n\n\t\t// @ts-ignore\n\t\tthis.fn = defaults(this.__proto__, _static.fn, path);\n\n\t\tthis.delimiter = path.delimiter ?? _static.fn.delimiter;\n\n\t\t[\n\t\t\t'join',\n\t\t\t'normalize',\n\t\t\t'relative',\n\t\t\t'resolve',\n\t\t\t'parse',\n\t\t\t'format',\n\n\t\t\t'basename',\n\t\t\t'dirname',\n\t\t\t'extname',\n\t\t\t'isAbsolute',\n\n\t\t\t'toNamespacedPath',\n\t\t]\n\t\t\t.forEach(prop =>\n\t\t\t{\n\n\t\t\t\t//this.fn[prop] = this.fn[prop].bind(this);\n\t\t\t\tthis[prop] = this[prop].bind(this);\n\n\t\t\t})\n\t\t;\n\n\t\tdelete this[id];\n\n\t\tObject.defineProperty(this, ORIGIN_KEY, {\n\t\t\tenumerable: false,\n\t\t\tvalue: path,\n\t\t});\n\n\t\tthis.fn[id] = this[id] = this;\n\t\tthis.name = id;\n\t}\n\n\tpublic join<T = string, U = string>(path: T, ...paths: U[]): string\n\t{\n\t\t// @ts-ignore\n\t\tpath = _fix_special(this, path, true);\n\n\t\treturn _replace_sep(this, _this_origin(this).join(path, ...paths));\n\t}\n\n\tpublic normalize<T extends string = string>(path: T): string\n\t{\n\t\tlet ret = _fix_special(this, path)\n\n\t\tif (ret?.length)\n\t\t{\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn _replace_sep(this, _this_origin(this).normalize(path));\n\t}\n\n\tpublic relative<T extends string = string, U extends string = string>(from: T, to: U): string\n\t{\n\t\tfrom = _fix_special(this, from, true);\n\t\tto = _fix_special(this, to, true);\n\n\t\treturn _replace_sep(this, _this_origin(this).relative(from.toString(), to.toString()));\n\t}\n\n\tpublic resolve<T = string, U = string>(path: T, ...paths: U[]): string\n\t{\n\t\t// @ts-ignore\n\t\tpath = _fix_special(this, path, true);\n\n\t\treturn _replace_sep(this, _this_origin(this).resolve(path, ...paths))\n\t}\n\n\tpublic parse<T extends string = string>(path: T): ParsedPath\n\t{\n\t\tpath = this.normalize(path) as any\n\n\t\tlet ret = _this_origin(this).parse(path);\n\n\t\tret.root = _replace_sep(this, ret.root);\n\t\tret.dir = _replace_sep(this, ret.dir);\n\n\t\treturn ret as ParsedPath;\n\t}\n\n\tpublic format<T = IParse>(pathObject: T): string\n\t{\n\t\treturn _replace_sep(this, _this_origin(this).format(pathObject));\n\t}\n\n\t// ---------\n\n\tpublic basename<T extends string = string, U extends string = string>(path: T, ext?: U): string\n\t{\n\t\treturn _this_origin(this).basename(path, ext);\n\t}\n\n\tpublic dirname<T extends string = string>(path: T): string\n\t{\n\t\tlet r: string;\n\n\t\tif (false && this.name !== 'posix' && pathIsNetworkDrive(path))\n\t\t{\n\t\t\tif (matchNetworkDriveRoot(path))\n\t\t\t{\n\t\t\t\tr = path\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet m = matchNetworkDrive02(path);\n\n\t\t\t\tif (m?.length)\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\\\\\${m[1]}`\n\t\t\t\t}\n\n\t\t\t\tr = _this_origin(this).dirname(path)\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr = _this_origin(this).dirname(path)\n\t\t}\n\n\t\tif (r.length > 1 && !/^\\w:[/\\\\]$/.test(r))\n\t\t{\n\t\t\tr = _strip_sep(r);\n\t\t}\n\n\t\treturn _replace_sep(this, r)\n\t}\n\n\tpublic extname<T extends string = string>(path: T): string\n\t{\n\t\treturn _this_origin(this).extname(path);\n\t}\n\n\tpublic isAbsolute<T extends string = string>(path: T): boolean\n\t{\n\t\treturn _this_origin(this).isAbsolute(path);\n\t}\n\n\tpublic toNamespacedPath(path: string)\n\t{\n\t\treturn _this_origin(this).toNamespacedPath(path as string);\n\t}\n\n}\n\nexport namespace PathWrap\n{\n\tlet __proto__ = {};\n\n\t// get prototype from class\n\tfor (let i in Object.getOwnPropertyDescriptors(PathWrap.prototype))\n\t{\n\t\t__proto__[i] = PathWrap.prototype[i];\n\t}\n\n\texport let fn = __proto__ as IPath;\n\n\tdelete fn.name;\n\n\tfn['fn'] = fn;\n\t// @ts-ignore\n\tfn.sep = '/';\n\n\tPathWrap.prototype.fn = fn;\n\n\texport type IPath = types.IPath;\n\texport type IPathNode = types.IPathNode;\n\texport type IParse = types.IParse;\n}\n\nexport const posix = new PathWrap(_path.posix, 'posix') as IPath;\nexport const win32 = new PathWrap(_path.win32, 'win32') as IPath;\n\nconst _upath = new PathWrap(_path, 'upath');\n\nexport type IUPath = PathWrap & {\n\tdefault: IUPath,\n\tupath: IUPath,\n\tPathWrap: typeof PathWrap,\n};\n\nexport const upath = _upath as IUPath;\n\nupath.PathWrap = PathWrap;\n\nexport const fn = PathWrap.fn = upath.fn;\n\n// @ts-ignore\n_path.upath = upath;\n\nfor (const [key, lib] of [\n\t['win32', win32],\n\t['posix', posix],\n\t['upath', upath],\n\t['default', upath],\n\t['node', _path],\n] as const)\n{\n\tdelete win32.fn[key];\n\tdelete posix.fn[key];\n\tdelete upath.fn[key];\n\n\tdelete win32[key];\n\tdelete posix[key];\n\tdelete upath[key];\n\n\t// @ts-ignore\n\twin32[key] = posix[key] = upath[key] = lib;\n\t//win32.__proto__[key] = posix.__proto__[key] = lib;\n}\n\nObject.defineProperty(upath, \"__esModule\", { value: true });\n\n// @ts-ignore\n//export default upath as PathWrap & IPath & IPathNode;\nexport default upath;\n\nexport function _this_origin(who: IPath): Pick<PathWrap, keyof IPathNode>\n{\n\tif (who[ORIGIN_KEY])\n\t{\n\t\t// @ts-ignore\n\t\treturn who[ORIGIN_KEY];\n\t}\n\t// @ts-ignore\n\telse if (who === upath)\n\t{\n\t\t// @ts-ignore\n\t\treturn _path;\n\t}\n\telse if (who === win32)\n\t{\n\t\t// @ts-ignore\n\t\treturn _path.win32;\n\t}\n\telse if (who === posix)\n\t{\n\t\t// @ts-ignore\n\t\treturn _path.posix;\n\t}\n\n\tthrow new TypeError(`this not PathWrap`);\n}\n"]}